@model KladrTask.WebUI.Models.UserViewModel

@{
    ViewBag.Title = "Redact";
    Layout = "~/Views/Shared/_Main.cshtml";
}

<script src="../../Scripts/jquery-2.1.3.js" type="text/javascript"></script>
<script src="../../Scripts/jquery-2.1.3.min.js" type="text/javascript"></script>
<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
<script type="text/javascript" src="../../Scripts/jquery.searchabledropdown-1.0.8.min.js"></script>


<script>
    $(document).ready(function () {

        $("select").searchable();

    });

    $(document).ready(function () {

        $("select").searchable({

            maxListSize: 10000,                       // if list size are less than maxListSize, show them all

            maxMultiMatch: 5000,                      // how many matching entries should be displayed

            exactMatch: false,                      // Exact matching on search

            wildcards: true,                        // Support for wildcard characters (*, ?)

            ignoreCase: true,                       // Ignore case sensitivity

            latency: 200,                           // how many millis to wait until starting search

            warnMultiMatch: 'top {0} matches ...',  // string to append to a list of entries cut short by maxMultiMatch

            warnNoMatch: 'no matches ...',          // string to show in the list when no entries match

            zIndex: 'auto'                          // zIndex for elements generated by this plugin

        });

    });


</script>
<script>
    function ChangeRoads() {
        $("#streets").empty();
        $.ajax({
            type: 'POST',
            url: '@Url.Action("GetStreets", "Account")',
            dataType: 'json',
            data: { id: $("#localities").val() },
            success: function (streets) {
                $.each(streets, function (i, street) {
                    $("#streets").append('<option value="'
                        + street.Value + '">'
                        + street.Text + '</option>');
                });
            },
            error: function (ex) {
                alert('road' + ex);
            }
        });
    }
</script>
<script type="text/javascript">
    $(document).ready(function () {
        $("#regions").change(function () {
            $("#localities").empty();
            $("#streets").empty();
            $("#indexes").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetLocalities", "Account")',

                dataType: 'json',

                data: { id: $("#regions").val() },

                success: function (localities) {

                    $.each(localities, function (i, locality) {
                        $("#localities").append('<option value="' + locality.Value + '">' +
                            locality.Text + '</option>');

                    });

                },
                error: function (ex) {
                    alert('reg changed local' + ex);
                }
            });


            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetIndex", "Account")',

                dataType: 'json',
                data: { regionCode: $("#regions").val() },
                success: function (localities) {
                    if (localities.length !== 0)
                        $("#indexes").empty();

                    $.each(localities, function (i, locality) {
                        $("#indexes").append('<option value="' + locality.Value + '">' +
                            locality.Text + '</option>');

                    });

                },
                error: function (ex) {
                    alert('reg changed index.' + ex);
                }
            })
            return false;
        })
    });
</script>

<script type="text/javascript">
    $(document).ready(function () {
        $("#localities").change(function () {
            ChangeRoads();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetIndex", "Account")',

                dataType: 'json',
                data: { regionCode: $("#regions").val(), localityCode: $("#localities").val(), roadCode: "" },
                success: function (localities) {
                    if (localities.length !== 0)
                        $("#indexes").empty();
                    $.each(localities, function (i, locality) {
                        $("#indexes").append('<option value="' + locality.Value + '">' +
                            locality.Text + '</option>');

                    });

                },
                error: function (ex) {
                    alert('local changed index.' + ex);
                }
            })
            return false;
        })
    });
</script>

<script type="text/javascript">
    $(document).ready(function () {
        $("#streets").change(function () {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetIndex", "Account")',

                dataType: 'json',
                data: { regionCode: $("#regions").val(), localityCode: $("#localities").val(), roadCode: $("#streets").val() },
                success: function (localities) {
                    if (localities.length !== 0)
                        $("#indexes").empty();
                    $.each(localities, function (i, locality) {
                        $("#indexes").append('<option value="' + locality.Value + '">' +
                            locality.Text + '</option>');

                    });

                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }
            })
            return false;
        })
    });
</script>

@using (Html.BeginForm())
{
    @Html.ValidationSummary()
    <label>Логин:</label>
    @Html.TextBoxFor(m => m.Login)
    <br />
    <label>Пароль:</label>
    @Html.PasswordFor(m => m.Password)
    <br />
    <label>Имя</label>
    @Html.TextBoxFor(m => m.FirstName)
    <br />
    <label>Фамилия</label>
    @Html.TextBoxFor(m => m.LastName)
    <br />
    <label>Дата рождения</label>
    @Html.TextBoxFor(m => m.Birthday)
    @Html.ValidationMessageFor(m => m.Birthday)
    <br />

    @Html.DropDownListFor(m => m.RegionCode, ViewData["regions"] as List<SelectListItem>, new { id = "regions", style = "width:250px", @class = "dropdown1" })
    <br />
    @Html.DropDownListFor(m => m.LocalityCode, ViewData["localities"] as List<SelectListItem>, new { id = "localities", style = "width:250px", @class = "dropdown1" })
    <br />
    @Html.DropDownListFor(m => m.RoadCode, ViewData["roads"] as List<SelectListItem>, new { id = "streets", style = "width:250px", @class = "dropdown1" })
    <br />
    <label>Номер дома:</label>
    @Html.TextBoxFor(m => m.HouseNumber)
    <br />
    <label>Корпус:</label>
    @Html.TextBoxFor(m => m.Housing)
    <br />
    <label>Номер квартиры:</label>
    @Html.TextBoxFor(m => m.ApartamentNumber)
    <div id="myIndex">
        Индекс <br />
    </div>
    @Html.DropDownListFor(m => m.Index, ViewData["indexes"] as List<SelectListItem>, new { id = "indexes", style = "width:250px", @class = "dropdown1" })
    <br />
    <div id="lower">
        <input type="submit" value="OK"/>
    </div>
    
   
}
